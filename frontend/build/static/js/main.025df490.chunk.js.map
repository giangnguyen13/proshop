{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/orderConstants.js","constants/userConstant.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userAction.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutStep.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_MY_ORDERS_REQUEST","ORDER_MY_ORDERS_SUCCESS","ORDER_MY_ORDERS_FAIL","ORDER_MY_ORDERS_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productCreateReview","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderMyOrder","orders","orderList","userList","users","userDelete","userUpdate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useDispatch","useSelector","Navbar","bg","collapseOnSelect","expand","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","Rating","props","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","listProducts","pageNumber","listProductDetails","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","Paginate","Pagination","Array","keys","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","join","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","quantity","setQuantity","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","console","log","CartScreen","location","search","Number","parseInt","split","removeFromCartHandler","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","myOrders","loadingOrders","errorOrders","updatedUser","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutStep","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","disable","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","userId","confirm","delete","UserEditScreen","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","rows","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.025df490.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\r\nexport const PRODUCT_TOP_RESET = 'PRODUCT_TOP_RESET';\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_MY_ORDERS_REQUEST = 'ORDER_MY_ORDERS_REQUEST';\r\nexport const ORDER_MY_ORDERS_SUCCESS = 'ORDER_MY_ORDERS_SUCCESS';\r\nexport const ORDER_MY_ORDERS_FAIL = 'ORDER_MY_ORDERS_FAIL';\r\nexport const ORDER_MY_ORDERS_RESET = 'ORDER_MY_ORDERS_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\nexport const ORDER_LIST_RESET = 'ORDER_LIST_RESET';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n    productListReducer,\r\n    productDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productCreateReviewReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {\r\n    orderCreateReducer,\r\n    orderDeliverReducer,\r\n    orderDetailsReducer,\r\n    orderListReducer,\r\n    orderMyOrderReducer,\r\n    orderPayReducer,\r\n} from './reducers/orderReducers';\r\nimport {\r\n    userDetailsReducer,\r\n    userListReducer,\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userUpdateProfileReducer,\r\n    useDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers';\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productCreateReview: productCreateReviewReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderMyOrder: orderMyOrderReducer,\r\n    orderList: orderListReducer,\r\n    userList: userListReducer,\r\n    userDelete: useDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems'))\r\n    : [];\r\n\r\nconst userFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo'))\r\n    : null;\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n    ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n    : {};\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage,\r\n    },\r\n    userLogin: { userInfo: userFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] };\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page,\r\n            };\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n    state = { product: { reviews: [] } },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state };\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload };\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true, ...state };\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true, ...state };\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true, ...state };\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload };\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productCreateReviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true, ...state };\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, ...state };\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload };\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (\r\n    state = { cartItems: [], shippingAddress: {} },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const existItem = state.cartItems.find(\r\n                (x) => x.product === item.product\r\n            );\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) =>\r\n                        x.product === item.product ? item : x\r\n                    ),\r\n                };\r\n            } else {\r\n                return { ...state, cartItems: [...state.cartItems, item] };\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            //const item = ;\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(\r\n                    (x) => x.product !== action.payload.product\r\n                ),\r\n            };\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            };\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n} from '../constants/userConstant';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_DETAILS_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { ...state, loading: true };\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload };\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { ...state, loading: true };\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload };\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LIST_RESET:\r\n            return { users: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { ...state, loading: true };\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_RESET,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_RESET,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_MY_ORDERS_FAIL,\r\n    ORDER_MY_ORDERS_REQUEST,\r\n    ORDER_MY_ORDERS_RESET,\r\n    ORDER_MY_ORDERS_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_RESET,\r\n    ORDER_PAY_SUCCESS,\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true,\r\n            };\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload,\r\n            };\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n    state = { loading: true, orderItems: [], shippingAddress: {} },\r\n    action\r\n) => {\r\n    switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                loading: true,\r\n            };\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload,\r\n            };\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            };\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            };\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        case ORDER_PAY_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true,\r\n            };\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            };\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        case ORDER_DELIVER_RESET:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderMyOrderReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_MY_ORDERS_REQUEST:\r\n            return {\r\n                loading: true,\r\n            };\r\n        case ORDER_MY_ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            };\r\n        case ORDER_MY_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        case ORDER_MY_ORDERS_RESET:\r\n            return { orders: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true,\r\n            };\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            };\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            };\r\n        case ORDER_LIST_RESET:\r\n            return { orders: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import axios from 'axios';\r\nimport { ORDER_MY_ORDERS_RESET } from '../constants/orderConstants';\r\nimport {\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_RESET,\r\n    USER_LIST_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_RESET,\r\n    USER_UPDATE_SUCCESS,\r\n} from '../constants/userConstant';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login',\r\n            {\r\n                email,\r\n                password,\r\n            },\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({ type: USER_LOGOUT });\r\n    dispatch({ type: USER_DETAILS_RESET });\r\n    dispatch({ type: ORDER_MY_ORDERS_RESET });\r\n    dispatch({ type: USER_LIST_RESET });\r\n    dispatch({ type: USER_UPDATE_RESET });\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,\r\n        });\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users',\r\n            {\r\n                name,\r\n                email,\r\n                password,\r\n            },\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        });\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        });\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const listUser = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/users`, config);\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        await axios.delete(`/api/users/${id}`, config);\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/${user._id}`,\r\n            user,\r\n            config\r\n        );\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS });\r\n\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst SearchBox = ({ history }) => {\r\n    const [keyword, setKeyword] = useState('');\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`);\r\n        } else {\r\n            history.push(`/`);\r\n        }\r\n    };\r\n    return (\r\n        <Form onSubmit={submitHandler} inline>\r\n            <Form.Control\r\n                type='text'\r\n                name='query'\r\n                onChange={(e) => setKeyword(e.target.value)}\r\n                placeholder='Search Product...'\r\n                className='mr-sm-2 ml-sm-5'\r\n            ></Form.Control>\r\n            <Button type='submit' variant='outline-success' className='p-2'>\r\n                Search\r\n            </Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { logout } from '../actions/userAction';\r\nimport SearchBox from '../components/SearchBox';\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch();\r\n    const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n    };\r\n    return (\r\n        <header>\r\n            <Navbar bg='dark' variant='dark' collapseOnSelect expand='lg'>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand>PROSHOP</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n                    <Navbar.Collapse id='basic-navbar-nav'>\r\n                        <Route\r\n                            render={({ history }) => (\r\n                                <SearchBox history={history} />\r\n                            )}\r\n                        />\r\n                        <Nav className='ml-auto'>\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link>\r\n                                    <i className='fas fa-shopping-cart'></i>Cart\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ? (\r\n                                <NavDropdown\r\n                                    title={userInfo.name}\r\n                                    id='username'\r\n                                >\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>\r\n                                            Profile\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Logout\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link>\r\n                                        <i className='fas fa-user'></i>Sign In\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n                            )}\r\n\r\n                            {userInfo && userInfo.isAdmin && (\r\n                                <NavDropdown title='Admin' id='adminmenu'>\r\n                                    <LinkContainer to='/admin/userList'>\r\n                                        <NavDropdown.Item>\r\n                                            Users\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/productList'>\r\n                                        <NavDropdown.Item>\r\n                                            Products\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/admin/orderList'>\r\n                                        <NavDropdown.Item>\r\n                                            Orders\r\n                                        </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; PROSHOP\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst Rating = (props) => {\r\n    const { value, text, color } = props;\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 1\r\n                            ? 'fas fa-star'\r\n                            : value >= 0.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 2\r\n                            ? 'fas fa-star'\r\n                            : value >= 1.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 3\r\n                            ? 'fas fa-star'\r\n                            : value >= 2.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 4\r\n                            ? 'fas fa-star'\r\n                            : value >= 3.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i\r\n                    style={{ color }}\r\n                    className={\r\n                        value >= 5\r\n                            ? 'fas fa-star'\r\n                            : value >= 4.5\r\n                            ? 'fas fa-star-half-alt'\r\n                            : 'far fa-star'\r\n                    }\r\n                ></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825',\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\n\r\nconst Product = (props) => {\r\n    const { product } = props;\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top'></Card.Img>\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div'>\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as='div'>\r\n                    <Rating\r\n                        value={product.rating}\r\n                        text={`${product.numReviews} reviews`}\r\n                    />\r\n                </Card.Text>\r\n                <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n","import {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\nexport const listProducts =\r\n    (keyword = '', pageNumber = '') =>\r\n    async (dispatch) => {\r\n        try {\r\n            dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n            const { data } = await axios.get(\r\n                `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n            );\r\n\r\n            dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: PRODUCT_LIST_FAIL,\r\n                payload:\r\n                    error.response && error.response.data.message\r\n                        ? error.response.data.message\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DELETE_REQUEST });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        await axios.delete(`/api/products/${id}`, config);\r\n\r\n        dispatch({ type: PRODUCT_DELETE_SUCCESS });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n        dispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_UPDATE_REQUEST });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/products/${product._id}`,\r\n            product,\r\n            config\r\n        );\r\n\r\n        dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const createProductReview =\r\n    (productId, review) => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\r\n\r\n            const {\r\n                userLogin: { userInfo },\r\n            } = getState();\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n\r\n            await axios.post(\r\n                `/api/products/${productId}/reviews`,\r\n                review,\r\n                config\r\n            );\r\n\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: PRODUCT_CREATE_REVIEW_FAIL,\r\n                payload:\r\n                    error.response && error.response.data.message\r\n                        ? error.response.data.message\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/products/top`);\r\n\r\n        dispatch({ type: PRODUCT_TOP_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block',\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n    return (\r\n        pages > 1 && (\r\n            <Pagination>\r\n                {[...Array(pages).keys()].map((x) => (\r\n                    <LinkContainer\r\n                        key={x + 1}\r\n                        to={\r\n                            !isAdmin\r\n                                ? keyword\r\n                                    ? `/search/${keyword}/page/${x + 1}`\r\n                                    : `/page/${x + 1}`\r\n                                : `/admin/productList/${x + 1}`\r\n                        }\r\n                    >\r\n                        <Pagination.Item active={x + 1 === page}>\r\n                            {x + 1}\r\n                        </Pagination.Item>\r\n                    </LinkContainer>\r\n                ))}\r\n            </Pagination>\r\n        )\r\n    );\r\n};\r\n\r\nexport default Paginate;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { listTopProducts } from '../actions/productActions';\r\n\r\nconst ProductCarousel = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const productTopRated = useSelector((state) => state.productTopRated);\r\n    const { loading, error, products } = productTopRated;\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts());\r\n    }, [dispatch]);\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <Carousel pause='hover' className='bg-dark'>\r\n            {products.map((product) => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`}>\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption>\r\n                            <h2>\r\n                                {product.name} (${product.price})\r\n                            </h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description} />\r\n            <meta name='keyword' content={keywords.join()} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome To ProShop',\r\n    description: 'We sell the best products for cheap',\r\n    keywords: ['electronics', 'buy electronics', 'cheap electronics'],\r\n};\r\n\r\nexport default Meta;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Product from '../components/Product';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProducts } from '../actions/productActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Paginate from '../components/Paginate';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\nimport Meta from '../components/Meta';\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword;\r\n    const pageNumber = match.params.pageNumber || 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector((state) => state.productList);\r\n\r\n    const { loading, error, products, page, pages } = productList;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber));\r\n    }, [dispatch, keyword, pageNumber]);\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? (\r\n                <ProductCarousel />\r\n            ) : (\r\n                <Link to='/' className='btn btn-light my-3'>\r\n                    Go back\r\n                </Link>\r\n            )}\r\n            <h1>Latest Products</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger' children={error} />\r\n            ) : (\r\n                <>\r\n                    <Row>\r\n                        {products.map((product) => {\r\n                            return (\r\n                                <Col\r\n                                    sm={12}\r\n                                    md={6}\r\n                                    lg={4}\r\n                                    xl={3}\r\n                                    key={product._id}\r\n                                >\r\n                                    <Product product={product} />\r\n                                </Col>\r\n                            );\r\n                        })}\r\n                    </Row>\r\n                    <Paginate\r\n                        pages={pages}\r\n                        page={page}\r\n                        keyword={keyword ?? ''}\r\n                    />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Image,\r\n    ListGroup,\r\n    Card,\r\n    Button,\r\n    Form,\r\n} from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\r\nimport {\r\n    listProductDetails,\r\n    createProductReview,\r\n} from '../actions/productActions';\r\nimport Meta from '../components/Meta';\r\n\r\nconst ProductScreen = (props) => {\r\n    const { history, match } = props;\r\n    const [quantity, setQuantity] = useState(1);\r\n\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector((state) => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const productCreateReview = useSelector(\r\n        (state) => state.productCreateReview\r\n    );\r\n    const { success: successProductReview, error: errorProductReview } =\r\n        productCreateReview;\r\n\r\n    useEffect(() => {\r\n        if (successProductReview) {\r\n            alert('Review submitted');\r\n            setRating(0);\r\n            setComment('');\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET });\r\n        }\r\n        dispatch(listProductDetails(match.params.id));\r\n    }, [dispatch, match, successProductReview]);\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?quantity=${quantity}`);\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            createProductReview(match.params.id, {\r\n                rating: rating,\r\n                comment: comment,\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go back\r\n            </Link>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Meta title={product.name} />\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image\r\n                                src={product.image}\r\n                                alt={product.name}\r\n                                fluid\r\n                            ></Image>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>{product.name}</h2>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Rating\r\n                                        value={product.rating}\r\n                                        text={`${product.numReviews} reviews`}\r\n                                    />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Price: ${product.price}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    Description: {product.description}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Price:</Col>\r\n                                            <Col>\r\n                                                <strong>\r\n                                                    ${product.price}\r\n                                                </strong>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Status:</Col>\r\n                                            <Col>\r\n                                                {product.countInStock > 0\r\n                                                    ? 'In stock'\r\n                                                    : 'Out of stock'}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Quantity</Col>\r\n                                                <Col>\r\n                                                    <Form.Control\r\n                                                        as='select'\r\n                                                        value={quantity}\r\n                                                        onChange={(e) =>\r\n                                                            setQuantity(\r\n                                                                e.target.value\r\n                                                            )\r\n                                                        }\r\n                                                    >\r\n                                                        {[\r\n                                                            ...Array(\r\n                                                                product.countInStock\r\n                                                            ).keys(),\r\n                                                        ].map((item) => (\r\n                                                            <option\r\n                                                                value={item + 1}\r\n                                                                key={item + 1}\r\n                                                            >\r\n                                                                {item + 1}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            onClick={addToCartHandler}\r\n                                            className='btn btn-block'\r\n                                            disabled={product.countInStock <= 0}\r\n                                        >\r\n                                            Add to cart\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <h2>Reviews</h2>\r\n                            {product.reviews.length === 0 && (\r\n                                <Message>No Reviews</Message>\r\n                            )}\r\n                            <ListGroup variant='flush'>\r\n                                {product.reviews.map((review) => (\r\n                                    <ListGroup.Item key={review._id}>\r\n                                        <strong>{review.name}</strong>\r\n                                        <Rating value={review.rating} />\r\n                                        <p>\r\n                                            {review.createdAt.substring(0, 10)}\r\n                                        </p>\r\n                                        <p>{review.comment}</p>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                                <ListGroup.Item>\r\n                                    <h2>Write a Customer Review</h2>\r\n                                    {errorProductReview && (\r\n                                        <Message variant='danger'>\r\n                                            {errorProductReview}\r\n                                        </Message>\r\n                                    )}\r\n                                    {userInfo ? (\r\n                                        <Form onSubmit={submitHandler}>\r\n                                            <Form.Group controlId='rating'>\r\n                                                <Form.Label>Rating</Form.Label>\r\n                                                <Form.Control\r\n                                                    as='select'\r\n                                                    value={rating}\r\n                                                    onChange={(e) =>\r\n                                                        setRating(\r\n                                                            e.target.value\r\n                                                        )\r\n                                                    }\r\n                                                >\r\n                                                    <option value=''>\r\n                                                        -- Select --\r\n                                                    </option>\r\n                                                    <option value='1'>\r\n                                                        1 - Poor\r\n                                                    </option>\r\n                                                    <option value='2'>\r\n                                                        2 - Fair\r\n                                                    </option>\r\n                                                    <option value='3'>\r\n                                                        3 - Good\r\n                                                    </option>\r\n                                                    <option value='4'>\r\n                                                        4 - Very Good\r\n                                                    </option>\r\n                                                    <option value='5'>\r\n                                                        5 - Excellent\r\n                                                    </option>\r\n                                                </Form.Control>\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label>Comment</Form.Label>\r\n                                                <Form.Control\r\n                                                    as='textarea'\r\n                                                    row='3'\r\n                                                    value={comment}\r\n                                                    onChange={(e) =>\r\n                                                        setComment(\r\n                                                            e.target.value\r\n                                                        )\r\n                                                    }\r\n                                                ></Form.Control>\r\n                                            </Form.Group>\r\n                                            <Button\r\n                                                type='submit'\r\n                                                variant='primary'\r\n                                            >\r\n                                                Create Review\r\n                                            </Button>\r\n                                        </Form>\r\n                                    ) : (\r\n                                        <Message>\r\n                                            Please{' '}\r\n                                            <Link to='/login'>sign in</Link> to\r\n                                            write your review\r\n                                        </Message>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios';\r\nimport {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n} from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\r\n    try {\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n        dispatch({\r\n            type: CART_ADD_ITEM,\r\n            payload: {\r\n                name: data.name,\r\n                quantity: quantity,\r\n                image: data.image,\r\n                price: data.price,\r\n                product: data._id,\r\n                countInStock: data.countInStock,\r\n            },\r\n        });\r\n\r\n        localStorage.setItem(\r\n            'cartItems',\r\n            JSON.stringify(getState().cart.cartItems)\r\n        );\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    try {\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n        dispatch({\r\n            type: CART_REMOVE_ITEM,\r\n            payload: {\r\n                product: data._id,\r\n            },\r\n        });\r\n\r\n        localStorage.setItem(\r\n            'cartItems',\r\n            JSON.stringify(getState().cart.cartItems)\r\n        );\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    });\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    });\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(JSON.stringify(data)));\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport { Link } from 'react-router-dom';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport {\r\n    Row,\r\n    Col,\r\n    ListGroup,\r\n    Image,\r\n    Form,\r\n    Button,\r\n    Card,\r\n} from 'react-bootstrap';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id;\r\n    const quantity = location.search\r\n        ? Number.parseInt(location.search.split('=')[1])\r\n        : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector((state) => state.cart);\r\n\r\n    const { cartItems } = cart;\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, quantity));\r\n        }\r\n    }, [dispatch, productId, quantity]);\r\n\r\n    const removeFromCartHandler = (productId) => {\r\n        dispatch(removeFromCart(productId));\r\n    };\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping');\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message>\r\n                        Your cart is empty\r\n                        <Link to='/'>Go back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map((item) => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image\r\n                                            src={item.image}\r\n                                            alt={item.name}\r\n                                            fluid\r\n                                            rounded\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>\r\n                                            {item.name}\r\n                                        </Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control\r\n                                            as='select'\r\n                                            value={item.quantity}\r\n                                            onChange={(e) =>\r\n                                                dispatch(\r\n                                                    addToCart(\r\n                                                        item.product,\r\n                                                        Number(e.target.value)\r\n                                                    )\r\n                                                )\r\n                                            }\r\n                                        >\r\n                                            {[\r\n                                                ...Array(\r\n                                                    item.countInStock\r\n                                                ).keys(),\r\n                                            ].map((x) => (\r\n                                                <option\r\n                                                    key={x + 1}\r\n                                                    value={x + 1}\r\n                                                >\r\n                                                    {x + 1}\r\n                                                </option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button\r\n                                            type='button'\r\n                                            variant='light'\r\n                                            onClick={() => {\r\n                                                removeFromCartHandler(\r\n                                                    item.product\r\n                                                );\r\n                                            }}\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2 className='cart-info'>\r\n                                Subtotal (\r\n                                {cartItems.reduce(\r\n                                    (acc, item) => acc + item.quantity,\r\n                                    0\r\n                                )}\r\n                                ) items\r\n                            </h2>\r\n                            $\r\n                            {cartItems\r\n                                .reduce(\r\n                                    (acc, item) =>\r\n                                        acc + item.quantity * item.price,\r\n                                    0\r\n                                )\r\n                                .toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block'\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Process to checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n            <Col md={2}></Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { login } from '../actions/userAction';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n\r\n    const { loading, error, userInfo } = userLogin;\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password));\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign in</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='example@example.com'\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='enter password'\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer?{' '}\r\n                    <Link\r\n                        to={\r\n                            redirect\r\n                                ? `/register?redirect=${redirect}`\r\n                                : '/register'\r\n                        }\r\n                    >\r\n                        Register here\r\n                    </Link>{' '}\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from '../actions/userAction';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const [message, setMessage] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userRegister = useSelector((state) => state.userRegister);\r\n\r\n    const { loading, error, userInfo } = userRegister;\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect);\r\n        }\r\n    }, [history, userInfo, redirect]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match');\r\n        } else {\r\n            dispatch(register(name, email, password));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='example@example.com'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Already have account?{' '}\r\n                    <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}\r\n                    >\r\n                        Sign in\r\n                    </Link>{' '}\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userAction';\r\nimport { listMyOrders } from '../actions/orderActions';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n    const { success } = userUpdateProfile;\r\n\r\n    const myOrders = useSelector((state) => state.orderMyOrder);\r\n    const { loading: loadingOrders, orders, error: errorOrders } = myOrders;\r\n\r\n    //const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login');\r\n        } else {\r\n            if (!user?.name) {\r\n                dispatch(getUserDetails('profile'));\r\n                dispatch(listMyOrders());\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match');\r\n        } else {\r\n            const updatedUser = {\r\n                _id: user._id,\r\n                name: name,\r\n                email: email,\r\n                password: password,\r\n            };\r\n            dispatch(updateUserProfile(updatedUser));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>My Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && (\r\n                    <Message variant='success'>Update successfully.!</Message>\r\n                )}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='example@example.com'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='enter password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' variant='primary'>\r\n                        Update profile\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                    <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map((order) => (\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>\r\n                                        {order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i\r\n                                                className='fas fa-times'\r\n                                                style={{ color: 'red' }}\r\n                                            ></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        {order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i\r\n                                                className='fas fa-times'\r\n                                                style={{ color: 'red' }}\r\n                                            ></i>\r\n                                        )}\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer\r\n                                            to={`/orders/${order._id}`}\r\n                                        >\r\n                                            <Button\r\n                                                variant='light'\r\n                                                className='btn-sm'\r\n                                            >\r\n                                                Details\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import axios from 'axios';\r\nimport {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_MY_ORDERS_FAIL,\r\n    ORDER_MY_ORDERS_REQUEST,\r\n    ORDER_MY_ORDERS_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n} from '../constants/orderConstants';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const payOrder =\r\n    (orderId, paymentResult) => async (dispatch, getState) => {\r\n        try {\r\n            dispatch({\r\n                type: ORDER_PAY_REQUEST,\r\n            });\r\n\r\n            const {\r\n                userLogin: { userInfo },\r\n            } = getState();\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${userInfo.token}`,\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.put(\r\n                `/api/orders/${orderId}/pay`,\r\n                paymentResult,\r\n                config\r\n            );\r\n\r\n            dispatch({\r\n                type: ORDER_PAY_SUCCESS,\r\n                payload: data,\r\n            });\r\n        } catch (error) {\r\n            dispatch({\r\n                type: ORDER_PAY_FAIL,\r\n                payload:\r\n                    error.response && error.response.data.message\r\n                        ? error.response.data.message\r\n                        : error.message,\r\n            });\r\n        }\r\n    };\r\n\r\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${orderId}/deliver`,\r\n            {},\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_MY_ORDERS_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n        dispatch({\r\n            type: ORDER_MY_ORDERS_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_MY_ORDERS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        });\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get(`/api/orders`, config);\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data,\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutStep = (props) => {\r\n    const { step1, step2, step3, step4 } = props;\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Sign In</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                    <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default CheckoutStep;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\nimport CheckoutStep from '../components/CheckoutStep';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector((state) => state.cart);\r\n\r\n    const { shippingAddress } = cart;\r\n    console.log(shippingAddress);\r\n    const dispatch = useDispatch();\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address);\r\n    const [city, setCity] = useState(shippingAddress.city);\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n    const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n        history.push('/payment');\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutStep step1={true} step2={true} />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        type='address'\r\n                        required={true}\r\n                        placeholder='Enter address'\r\n                        value={address}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        type='city'\r\n                        required={true}\r\n                        placeholder='Enter city'\r\n                        value={city}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        type='postalCode'\r\n                        required={true}\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        type='country'\r\n                        required={true}\r\n                        placeholder='Enter country'\r\n                        value={country}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\nimport CheckoutStep from '../components/CheckoutStep';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector((state) => state.cart);\r\n    const { shippingAddress } = cart;\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping');\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(savePaymentMethod(paymentMethod));\r\n        history.push('/placeorder');\r\n    };\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutStep step1={true} step2={true} step3={true} />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal or Credit Card'\r\n                            id='PayPal'\r\n                            name='paymentMethod'\r\n                            value='PayPal'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check>\r\n                        {/* <Form.Check\r\n                            type='radio'\r\n                            label='Stripe'\r\n                            id='Stripe'\r\n                            name='paymentMethod'\r\n                            value='Stripe'\r\n                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                        ></Form.Check> */}\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutStep from '../components/CheckoutStep';\r\nimport { createOrder } from '../actions/orderActions';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const cart = useSelector((state) => state.cart);\r\n    const orderCreate = useSelector((state) => state.orderCreate);\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n    // Calculate prices\r\n\r\n    cart.itemsPrice = addDecimals(\r\n        cart.cartItems\r\n            .reduce((acc, item) => acc + item.price * item.quantity, 0)\r\n            .toFixed(2)\r\n    );\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 15);\r\n\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n\r\n    cart.totalPrice = addDecimals(\r\n        Number(cart.itemsPrice) +\r\n            Number(cart.shippingPrice) +\r\n            Number(cart.taxPrice)\r\n    );\r\n\r\n    const { order, success, error } = orderCreate;\r\n\r\n    const placeOrderHandler = (e) => {\r\n        dispatch(\r\n            createOrder({\r\n                orderItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod,\r\n                itemsPrice: cart.itemsPrice,\r\n                shippingPrice: cart.shippingPrice,\r\n                taxPrice: cart.taxPrice,\r\n                totalPrice: cart.totalPrice,\r\n            })\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`order/${order._id}`);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success]);\r\n\r\n    return (\r\n        <>\r\n            <CheckoutStep step1={true} step2={true} step3={true} step4={true} />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {cart.shippingAddress.address},{' '}\r\n                                {cart.shippingAddress.city}{' '}\r\n                                {cart.shippingAddress.postalCode},{' '}\r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Item</h2>\r\n                            {cart.cartItems.length === 0 ? (\r\n                                <Message>Your cart is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link\r\n                                                        to={`/product/${item.product}`}\r\n                                                    >\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.quantity} x $\r\n                                                    {item.price} = $\r\n                                                    {item.quantity * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {error && (\r\n                                    <Message variant='danger'>{error}</Message>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disable={\r\n                                        cart.cartItems.length === 0\r\n                                            ? 'disabled'\r\n                                            : ''\r\n                                    }\r\n                                    onClick={placeOrderHandler}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {\r\n    getOrderDetails,\r\n    payOrder,\r\n    deliverOrder,\r\n} from '../actions/orderActions';\r\nimport {\r\n    ORDER_PAY_RESET,\r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id;\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const orderDetails = useSelector((state) => state.orderDetails);\r\n    const { order, loading, error } = orderDetails;\r\n\r\n    const orderPay = useSelector((state) => state.orderPay);\r\n    const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n    const orderDeliver = useSelector((state) => state.orderDeliver);\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login');\r\n        }\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n            script.async = true;\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            };\r\n\r\n            document.body.appendChild(script);\r\n        };\r\n\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({ type: ORDER_PAY_RESET });\r\n            dispatch({ type: ORDER_DELIVER_RESET });\r\n            dispatch(getOrderDetails(orderId));\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n    }, [\r\n        orderId,\r\n        dispatch,\r\n        successPay,\r\n        successDeliver,\r\n        order,\r\n        history,\r\n        userInfo,\r\n    ]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult));\r\n    };\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(orderId));\r\n    };\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <>\r\n            <h1>Order: {order._id}</h1>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Name: </strong> {order.user.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong>Email: </strong>{' '}\r\n                                <a href={`mailto:${order.user.email}`}>\r\n                                    {order.user.email}\r\n                                </a>\r\n                            </p>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {order.shippingAddress.address},{' '}\r\n                                {order.shippingAddress.city}{' '}\r\n                                {order.shippingAddress.postalCode},{' '}\r\n                                {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? (\r\n                                <Message variant='success'>\r\n                                    Delivered on {order.deliveredAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant='danger'>\r\n                                    Not delivered\r\n                                </Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? (\r\n                                <Message variant='success'>\r\n                                    Paid on {order.paidAt}\r\n                                </Message>\r\n                            ) : (\r\n                                <Message variant='danger'>Not paid</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Item</h2>\r\n                            {order.orderItems.length === 0 ? (\r\n                                <Message>Your cart is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image\r\n                                                        src={item.image}\r\n                                                        alt={item.name}\r\n                                                        fluid\r\n                                                        rounded\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link\r\n                                                        to={`/product/${item.product}`}\r\n                                                    >\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.quantity} x $\r\n                                                    {item.price} = $\r\n                                                    {item.quantity * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? (\r\n                                        <Loader />\r\n                                    ) : (\r\n                                        <PayPalButton\r\n                                            amount={order.totalPrice}\r\n                                            onSuccess={successPaymentHandler}\r\n                                        />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo?.isAdmin &&\r\n                                order.isPaid &&\r\n                                !order.isDelivered && (\r\n                                    <ListGroup.Item>\r\n                                        <Button\r\n                                            type='button'\r\n                                            className='btn btn-block'\r\n                                            onClick={deliverHandler}\r\n                                        >\r\n                                            Mark as delivered\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listUser, deleteUser } from '../actions/userAction';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const userList = useSelector((state) => state.userList);\r\n    const { loading, error, users } = userList;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userDelete = useSelector((state) => state.userDelete);\r\n    const { success: successDelete } = userDelete;\r\n\r\n    const deleteHandler = (userId) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteUser(userId));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUser());\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, userInfo, successDelete]);\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map((user) => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>\r\n                                    <a href={`mailto:${user.email}`}>\r\n                                        {user.email}\r\n                                    </a>\r\n                                </td>\r\n                                <td>\r\n                                    {user.isAdmin ? (\r\n                                        <i\r\n                                            className='fas fa-check'\r\n                                            style={{ color: 'green' }}\r\n                                        ></i>\r\n                                    ) : (\r\n                                        <i\r\n                                            className='fas fa-times'\r\n                                            style={{ color: 'red' }}\r\n                                        ></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer\r\n                                        to={`/admin/user/${user._id}/edit`}\r\n                                    >\r\n                                        <Button\r\n                                            variant='light'\r\n                                            className='btn-sm'\r\n                                        >\r\n                                            <i className='fas fa-edit'></i>\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button\r\n                                        variant='danger'\r\n                                        className='btn-sm'\r\n                                        onClick={() => deleteHandler(user._id)}\r\n                                    >\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserDetails, updateUser } from '../actions/userAction';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstant';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector((state) => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userUpdate = useSelector((state) => state.userUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = userUpdate;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET });\r\n            history.push('/admin/userList');\r\n        } else {\r\n            if (!user?.name || user?._id !== userId) {\r\n                dispatch(getUserDetails(userId));\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n                setIsAdmin(user.isAdmin);\r\n            }\r\n        }\r\n    }, [user, dispatch, userId, successUpdate, history]);\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateUser({\r\n                _id: userId,\r\n                name: name,\r\n                email: email,\r\n                isAdmin: isAdmin,\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link to={`/admin/userList`} className='btn btn-light my-3'>\r\n                Go back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && (\r\n                    <Message variant='danger'>{errorUpdate}</Message>\r\n                )}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='variant'>{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='example@example.com'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='isAdmin'>\r\n                            <Form.Check\r\n                                type='checkbox'\r\n                                label='Is Admin'\r\n                                checked={isAdmin}\r\n                                onChange={(e) => setIsAdmin(e.target.checked)}\r\n                            ></Form.Check>\r\n                        </Form.Group>\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    listProducts,\r\n    deleteProduct,\r\n    createProduct,\r\n} from '../actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1;\r\n    const dispatch = useDispatch();\r\n\r\n    const productList = useSelector((state) => state.productList);\r\n    const { loading, error, products, page, pages } = productList;\r\n\r\n    const productDelete = useSelector((state) => state.productDelete);\r\n    const {\r\n        loading: loadingDelete,\r\n        error: errorDelete,\r\n        success: successDelete,\r\n    } = productDelete;\r\n\r\n    const productCreate = useSelector((state) => state.productCreate);\r\n    const {\r\n        loading: loadingCreate,\r\n        error: errorCreate,\r\n        success: successCreate,\r\n        product: createdProduct,\r\n    } = productCreate;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure?')) {\r\n            dispatch(deleteProduct(id));\r\n        }\r\n    };\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct());\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n        if (!userInfo?.isAdmin) {\r\n            history.push('/login');\r\n        }\r\n        if (successCreate) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`);\r\n        }\r\n        dispatch(listProducts('', pageNumber));\r\n    }, [\r\n        dispatch,\r\n        history,\r\n        userInfo,\r\n        successCreate,\r\n        successDelete,\r\n        createdProduct,\r\n        pageNumber,\r\n    ]);\r\n    return (\r\n        <>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col className='text-right'>\r\n                    <Button className='my-3' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            {loadingCreate && <Loader />}\r\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <>\r\n                    <Table\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        responsive\r\n                        className='table-sm'\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>NAME</th>\r\n                                <th>Price</th>\r\n                                <th>Category</th>\r\n                                <th>Brand</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {products.map((product) => (\r\n                                <tr key={product._id}>\r\n                                    <td>{product._id}</td>\r\n                                    <td>{product.name}</td>\r\n                                    <td>${product.price}</td>\r\n                                    <td>{product.category}</td>\r\n                                    <td>{product.brand}</td>\r\n                                    <td>\r\n                                        <LinkContainer\r\n                                            to={`/admin/product/${product._id}/edit`}\r\n                                        >\r\n                                            <Button\r\n                                                variant='light'\r\n                                                className='btn-sm'\r\n                                            >\r\n                                                <i className='fas fa-edit'></i>\r\n                                            </Button>\r\n                                        </LinkContainer>\r\n                                        <Button\r\n                                            variant='danger'\r\n                                            className='btn-sm'\r\n                                            onClick={() =>\r\n                                                deleteHandler(product._id)\r\n                                            }\r\n                                        >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <Paginate pages={pages} page={page} isAdmin={true} />\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProductDetails, updateProduct } from '../actions/productActions';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [image, setImage] = useState('');\r\n    const [brand, setBrand] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [countInStock, setCountInStock] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [uploading, setUploading] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector((state) => state.productDetails);\r\n    const { loading, error, product } = productDetails;\r\n\r\n    const productUpdate = useSelector((state) => state.productUpdate);\r\n    const {\r\n        loading: loadingUpdate,\r\n        error: errorUpdate,\r\n        success: successUpdate,\r\n    } = productUpdate;\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET });\r\n            history.push('/admin/productList');\r\n        } else {\r\n            if (!product?.name || product?._id !== productId) {\r\n                dispatch(listProductDetails(productId));\r\n            } else {\r\n                setName(product.name);\r\n                setPrice(product.price);\r\n                setImage(product.image);\r\n                setBrand(product.brand);\r\n                setCategory(product.category);\r\n                setCountInStock(product.countInStock);\r\n                setDescription(product.description);\r\n            }\r\n        }\r\n    }, [dispatch, product, productId, history, successUpdate]);\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        setUploading(true);\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n            };\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config);\r\n\r\n            setImage(data);\r\n            setUploading(false);\r\n        } catch (error) {\r\n            console.log(error);\r\n            setUploading(false);\r\n        }\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(\r\n            updateProduct({\r\n                _id: productId,\r\n                name: name,\r\n                description: description,\r\n                image: image,\r\n                brand: brand,\r\n                category: category,\r\n                countInStock: countInStock,\r\n                price: price,\r\n            })\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Link to={`/admin/productList`} className='btn btn-light my-3'>\r\n                Go back\r\n            </Link>\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && (\r\n                    <Message variant='danger'>{errorUpdate}</Message>\r\n                )}\r\n                {loading ? (\r\n                    <Loader />\r\n                ) : error ? (\r\n                    <Message variant='variant'>{error}</Message>\r\n                ) : (\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='price'>\r\n                            <Form.Label>Price Address</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='example@example.com'\r\n                                value={price}\r\n                                onChange={(e) => setPrice(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='image'>\r\n                            <Form.Label>Image URL</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter Image URL'\r\n                                value={image}\r\n                                onChange={(e) => setImage(e.target.value)}\r\n                            ></Form.Control>\r\n                            <Form.File\r\n                                id='image-file'\r\n                                label='Choose File'\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                            ></Form.File>\r\n                            {uploading && <Loader />}\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='brand'>\r\n                            <Form.Label>Brand Name</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter Brand'\r\n                                value={brand}\r\n                                onChange={(e) => setBrand(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='countInStock'>\r\n                            <Form.Label>Count In Stock</Form.Label>\r\n                            <Form.Control\r\n                                type='number'\r\n                                placeholder='Enter count in stock'\r\n                                value={countInStock}\r\n                                onChange={(e) =>\r\n                                    setCountInStock(e.target.value)\r\n                                }\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='category'>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                type='text'\r\n                                placeholder='Enter Category'\r\n                                value={category}\r\n                                onChange={(e) => setCategory(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description'>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                as='textarea'\r\n                                rows={3}\r\n                                type='text'\r\n                                placeholder='Enter description'\r\n                                value={description}\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Button type='submit' variant='primary'>\r\n                            Update\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </FormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listOrders } from '../actions/orderActions';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const orderList = useSelector((state) => state.orderList);\r\n    const { loading, error, orders } = orderList;\r\n\r\n    const userLogin = useSelector((state) => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders());\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, userInfo]);\r\n    return (\r\n        <>\r\n            <h1>Orders</h1>\r\n            {loading ? (\r\n                <Loader />\r\n            ) : error ? (\r\n                <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n                <Table striped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>USER</th>\r\n                            <th>DATE</th>\r\n                            <th>TOTAL</th>\r\n                            <th>PAID</th>\r\n                            <th>DELIVERED</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map((order) => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n\r\n                                <LinkContainer\r\n                                    to={`/admin/user/${order.user._id}/edit`}\r\n                                >\r\n                                    <td>{order.user.name}</td>\r\n                                </LinkContainer>\r\n\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>{order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? (\r\n                                        order.paidAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i\r\n                                            className='fas fa-times'\r\n                                            style={{ color: 'red' }}\r\n                                        ></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? (\r\n                                        order.deliveredAt.substring(0, 10)\r\n                                    ) : (\r\n                                        <i\r\n                                            className='fas fa-times'\r\n                                            style={{ color: 'red' }}\r\n                                        ></i>\r\n                                    )}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/orders/${order._id}`}>\r\n                                        <Button\r\n                                            variant='light'\r\n                                            className='btn-sm'\r\n                                        >\r\n                                            Details\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\nconst App = () => {\n    return (\n        <Router>\n            <Header></Header>\n            <main className='py-3'>\n                <Container>\n                    <Route path='/orders/:id' component={OrderScreen} />\n                    <Route path='/placeorder' component={PlaceOrderScreen} />\n                    <Route path='/payment' component={PaymentScreen} />\n                    <Route path='/shipping' component={ShippingScreen} />\n                    <Route path='/profile' component={ProfileScreen} />\n                    <Route path='/register' component={RegisterScreen} />\n                    <Route path='/login' component={LoginScreen} />\n                    <Route path='/product/:id' component={ProductScreen} />\n                    <Route path='/cart/:id?' component={CartScreen} />\n                    <Route path='/admin/userList' component={UserListScreen} />\n                    <Route\n                        path='/admin/orderList'\n                        component={OrderListScreen}\n                    />\n                    <Route\n                        path='/admin/user/:id/edit'\n                        component={UserEditScreen}\n                    />\n                    <Route\n                        path='/admin/productList'\n                        component={ProductListScreen}\n                        exact\n                    />\n                    <Route\n                        path='/admin/productList/:pageNumber'\n                        component={ProductListScreen}\n                        exact\n                    />\n                    <Route\n                        path='/admin/product/:id/edit'\n                        component={ProductEditScreen}\n                    />\n                    <Route\n                        path='/search/:keyword'\n                        component={HomeScreen}\n                        exact\n                    />\n                    <Route\n                        path='/page/:pageNumber'\n                        exact\n                        component={HomeScreen}\n                    />\n                    <Route\n                        path='/search/:keyword/page/:pageNumber'\n                        exact\n                        component={HomeScreen}\n                    />\n                    <Route path='/' exact component={HomeScreen} />\n                </Container>\n            </main>\n\n            <Footer></Footer>\n        </Router>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}